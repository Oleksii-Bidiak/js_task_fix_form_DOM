{"mappings":"A,S,E,C,C,C,E,C,A,M,G,E,E,M,A,G,C,E,E,M,A,E,I,I,E,E,E,A,M,G,E,E,I,C,C,E,C,C,C,E,C,O,C,CCEA,I,EAAM,EAAgB,SAAC,CAAvB,EACE,IAAM,EAAc,CAAQ,CAAC,EAAE,CAAC,WAAW,GACrC,EAAQ,EAAS,KAAK,CAAC,SAE7B,IAAI,EAKF,MAAO,GAAiB,MAAA,CAAd,GAAgC,MAAA,CAAlB,EAAS,KAAK,CAAC,IAJvC,IAAM,EAAQ,EAAS,OAAO,CAAC,CAAK,CAAC,EAAE,EAEvC,MAAQ,GAAgB,MAAA,CAAd,GAA0C,MAAA,CAA5B,EAAS,KAAK,CAAC,EAAG,GAAO,KAAyB,MAAA,CAAtB,EAAS,KAAK,CAAC,GAIvE,EAIA,A,C,A,C,S,C,E,G,M,O,C,G,O,E,E,C,E,EAFmB,SAAS,gBAAgB,CAAC,Y,A,S,C,E,G,A,a,O,Q,A,M,C,C,O,Q,C,E,A,M,C,C,a,C,O,M,I,C,E,E,I,A,S,C,C,C,E,G,G,G,A,U,O,E,O,E,E,K,G,I,E,O,S,C,Q,C,I,C,G,K,C,E,I,G,W,G,E,W,E,C,E,E,W,C,I,A,E,A,Q,G,A,Q,E,O,M,I,C,G,G,A,c,G,2C,I,C,G,O,E,E,K,G,E,I,A,W,M,A,U,wI,G,EAEtC,OAAO,CAAC,SAAC,CAAhB,EACE,IAAM,EAAQ,EAAM,aAAa,CAAC,eAC5B,EAAQ,SAAS,aAAa,CAAC,SAC/B,EAAY,EAAc,EAAM,YAAY,CAAC,SAEnD,EAAM,YAAY,CAAC,cAAe,GAClC,EAAM,YAAY,CAAC,MAAO,EAAM,YAAY,CAAC,OAC7C,EAAM,SAAS,CAAC,GAAG,CAAC,eACpB,EAAM,WAAW,CAAG,EAEpB,EAAM,OAAO,CAAC,EAChB","sources":["<anon>","src/scripts/main.js"],"sourcesContent":["\"use strict\";\nfunction _array_like_to_array(arr, len) {\n    if (len == null || len > arr.length) len = arr.length;\n    for(var i = 0, arr2 = new Array(len); i < len; i++)arr2[i] = arr[i];\n    return arr2;\n}\nfunction _array_without_holes(arr) {\n    if (Array.isArray(arr)) return _array_like_to_array(arr);\n}\nfunction _iterable_to_array(iter) {\n    if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter);\n}\nfunction _non_iterable_spread() {\n    throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\nfunction _to_consumable_array(arr) {\n    return _array_without_holes(arr) || _iterable_to_array(arr) || _unsupported_iterable_to_array(arr) || _non_iterable_spread();\n}\nfunction _unsupported_iterable_to_array(o, minLen) {\n    if (!o) return;\n    if (typeof o === \"string\") return _array_like_to_array(o, minLen);\n    var n = Object.prototype.toString.call(o).slice(8, -1);\n    if (n === \"Object\" && o.constructor) n = o.constructor.name;\n    if (n === \"Map\" || n === \"Set\") return Array.from(n);\n    if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _array_like_to_array(o, minLen);\n}\nvar transformName = function(attrName) {\n    var firstLetter = attrName[0].toUpperCase();\n    var match = attrName.match(/[A-Z]/);\n    if (match) {\n        var index = attrName.indexOf(match[0]);\n        return \"\".concat(firstLetter).concat(attrName.slice(1, index), \" \").concat(attrName.slice(index));\n    } else return \"\".concat(firstLetter).concat(attrName.slice(1));\n};\nvar fields = _to_consumable_array(document.querySelectorAll(\".field\"));\nfields.forEach(function(field) {\n    var input = field.querySelector(\".field-text\");\n    var label = document.createElement(\"label\");\n    var labelName = transformName(input.getAttribute(\"name\"));\n    input.setAttribute(\"placeholder\", labelName);\n    label.setAttribute(\"for\", input.getAttribute(\"id\"));\n    label.classList.add(\"field-label\");\n    label.textContent = labelName;\n    field.prepend(label);\n});\n\n//# sourceMappingURL=index.9cb6dda5.js.map\n","'use strict';\n\nconst transformName = (attrName) => {\n  const firstLetter = attrName[0].toUpperCase();\n  const match = attrName.match(/[A-Z]/);\n\n  if (match) {\n    const index = attrName.indexOf(match[0]);\n\n    return `${firstLetter}${attrName.slice(1, index)} ${attrName.slice(index)}`;\n  } else {\n    return `${firstLetter}${attrName.slice(1)}`;\n  }\n};\n\nconst fields = [...document.querySelectorAll('.field')];\n\nfields.forEach((field) => {\n  const input = field.querySelector('.field-text');\n  const label = document.createElement('label');\n  const labelName = transformName(input.getAttribute('name'));\n\n  input.setAttribute('placeholder', labelName);\n  label.setAttribute('for', input.getAttribute('id'));\n  label.classList.add('field-label');\n  label.textContent = labelName;\n\n  field.prepend(label);\n});\n"],"names":["_array_like_to_array","arr","len","length","i","arr2","Array","transformName","attrName","firstLetter","toUpperCase","match","concat","slice","index","indexOf","fields","_array_without_holes","isArray","document","querySelectorAll","_iterable_to_array","iter","Symbol","iterator","from","_unsupported_iterable_to_array","o","minLen","n","Object","prototype","toString","call","constructor","name","test","_non_iterable_spread","TypeError","forEach","field","input","querySelector","label","createElement","labelName","getAttribute","setAttribute","classList","add","textContent","prepend"],"version":3,"file":"index.9cb6dda5.js.map"}